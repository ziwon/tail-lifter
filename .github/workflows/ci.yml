name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: "1.22"

jobs:
  ebpf:
    name: Build eBPF
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache apt packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: clang llvm linux-headers-generic libbpf-dev
          version: 1.0
          
      - name: Cache just binary
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/just
          key: just-${{ runner.os }}
          
      - name: Install just
        run: |
          if [ ! -f ~/.cargo/bin/just ]; then
            cargo install just
          fi
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          
      - name: Build BPF object
        run: just build
        
      - name: Verify BPF object
        run: |
          test -f bpf/tail_lifter.bpf.o
          file bpf/tail_lifter.bpf.o | grep "eBPF"
          
      - name: Upload BPF artifact
        uses: actions/upload-artifact@v4
        with:
          name: bpf-object
          path: bpf/tail_lifter.bpf.o
          retention-days: 1

  golang:
    name: Go Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          
      - name: Download dependencies
        run: go mod download
        
      - name: Run go vet
        run: go vet ./cmd/...
        
      - name: Check go fmt
        run: |
          if [ "$(gofmt -s -l ./cmd | wc -l)" -gt 0 ]; then
            echo "Code is not formatted:"
            gofmt -s -l .
            exit 1
          fi
          
      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./cmd/...
        
      - name: Build binary
        run: CGO_ENABLED=0 go build -o tail-lifter ./cmd/tail-lifter
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          fail_ci_if_error: false

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [ebpf, golang]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ghcr.io/ziwon/tail-lifter:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Test Docker image
        run: |
          docker run --rm ghcr.io/ziwon/tail-lifter:test --help || true